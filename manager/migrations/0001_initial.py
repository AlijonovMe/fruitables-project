# Generated by Django 5.1.3 on 2025-01-17 04:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Nomi')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Identifikator')),
            ],
            options={
                'verbose_name': "Bo'lim ",
                'verbose_name_plural': "Bo'limlar",
            },
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, verbose_name='Telefon raqam')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Profil surati')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi ',
                'verbose_name_plural': 'Foydalanuvchilar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Nomi')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Identifikator')),
                ('departament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departament', to='manager.departament', verbose_name="Bo'limi")),
            ],
            options={
                'verbose_name': 'Kategoriya ',
                'verbose_name_plural': 'Kategoriyalar',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Nomi')),
                ('slug', models.SlugField(max_length=250, unique=True, verbose_name='Identifikator')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Tavsifi')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Narxi')),
                ('quantity', models.IntegerField(default=15, verbose_name='Miqdori')),
                ('quality', models.CharField(max_length=10, verbose_name='Sifati')),
                ('weight', models.CharField(choices=[('kg', 'Kilogramm'), ('l', 'Litr')], max_length=2, verbose_name="O'lchov birligi")),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.category')),
            ],
            options={
                'verbose_name': 'Mahsulot ',
                'verbose_name_plural': 'Mahsulotlar',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Surati')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.product', verbose_name='Mahsuloti')),
            ],
            options={
                'verbose_name': 'Mahsulot surati ',
                'verbose_name_plural': 'Mahsulot suratlari',
            },
        ),
    ]
